{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/components/Countdown.tsx\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ChallengeContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nlet countdownTimeout;\nconst starInMinute = 0.05;\nexport function Countdown() {\n  const contextData = useContext(ChallengeContext);\n  const {\n    0: time,\n    1: setTime\n  } = useState(starInMinute * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(starInMinute * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengeContext","styles","countdownTimeout","starInMinute","Countdown","contextData","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { ChallengeContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\nlet countdownTimeout: NodeJS.Timeout;\nconst starInMinute = 0.05;\n\nexport function Countdown() {\n  const contextData = useContext(ChallengeContext);\n  const [time, setTime] = useState(starInMinute * 60);\n  const [isActive, setIsActive] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(starInMinute * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n\n  return (\n    <div>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRight}</span>\n        </div>\n      </div>\n\n      {hasFinished ? (\n        <button disabled className={styles.countdownButton}>\n          Ciclo encerrado\n        </button>\n      ) : (\n        <>\n          {isActive ? (\n            <button\n              type=\"button\"\n              className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n              onClick={resetCountdown}\n            >\n              Abandonar ciclo\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className={styles.countdownButton}\n              onClick={startCountdown}\n            >\n              Iniciar Ciclo\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}