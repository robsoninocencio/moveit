{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from \"react\";\nexport const ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengeContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AA4BA,OAAO,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAkE;AACvE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAA4CP,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACQ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDT,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASU,OAAT,GAAmB;AACjBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASE,MAAAA,iBAAT;AAA4BE,MAAAA,mBAA5B;AAAiDE,MAAAA;AAAjD,KADT;AAAA,cAGGP;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ninterface Challenge {\n  type: \"body\" | \"eye\";\n  description: string;\n  amount: number;\n}\n\ninterface ChallengeContextData {\n  level: number;\n  currentExperience: number;\n  experienceToNextLevel: number;\n  challengesCompleted: number;\n  activeChallenge: Challenge;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n  resetChallenge: () => void;\n  completeChallenge: () => void;\n  closeLevelUpModal: () => void;\n}\n\ninterface ChallengeProviderProps {\n  children: ReactNode;\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n}\n\nexport const ChallengeContext = createContext({});\n\nexport function ChallengesProvider({ children }: ChallengeProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentExperience, setCurrentExperience] = useState(0);\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return (\n    <ChallengeContext.Provider\n      value={{ level, currentExperience, challengesCompleted, levelUp }}\n    >\n      {children}\n    </ChallengeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}