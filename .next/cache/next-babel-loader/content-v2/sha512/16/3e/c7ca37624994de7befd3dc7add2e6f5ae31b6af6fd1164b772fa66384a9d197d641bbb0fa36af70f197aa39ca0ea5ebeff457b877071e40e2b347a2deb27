{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/components/Countdown.tsx\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/robson/projetos/rocketseat/nlw4/react/moveit-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACC,gBAAD,CAPd;AASA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGV,WAAW,gBACV;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAKV;AAAA,gBACGX,QAAQ,gBACP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACgB,eAAgB,IAAGhB,MAAM,CAACiB,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEV,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBASP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAFpB;AAGE,QAAA,OAAO,EAAEV,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { ChallengeContext } from \"../contexts/ChallengesContext\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown,\n  } = useContext(CountdownContext);\n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  return (\n    <div>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRight}</span>\n        </div>\n      </div>\n\n      {hasFinished ? (\n        <button disabled className={styles.countdownButton}>\n          Ciclo encerrado\n        </button>\n      ) : (\n        <>\n          {isActive ? (\n            <button\n              type=\"button\"\n              className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n              onClick={resetCountdown}\n            >\n              Abandonar ciclo\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className={styles.countdownButton}\n              onClick={startCountdown}\n            >\n              Iniciar Ciclo\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}